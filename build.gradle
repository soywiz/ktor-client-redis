
buildscript {
    repositories {
        mavenLocal()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url 'https://dl.bintray.com/kotlin/ktor' }
        maven { url 'https://dl.bintray.com/kotlin/kotlinx' }
        maven { url 'https://dl.bintray.com/palantir/releases' }
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintrayVersion"
    }
}

repositories {
    mavenLocal()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    maven { url 'https://dl.bintray.com/kotlin/ktor' }
    maven { url 'https://dl.bintray.com/kotlin/kotlinx' }
    maven { url 'https://dl.bintray.com/palantir/releases' }
    jcenter()
}

apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group 'io.ktor.client'
version ext.project_version

kotlin.experimental.coroutines 'enable'

sourceSets {
    main.kotlin.srcDirs 'src'
    test.kotlin.srcDirs 'test'
    main.resources.srcDirs 'resources'
}

dependencies {
    //implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines"
    implementation "io.ktor:ktor-network:$ktor_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    testImplementation "io.ktor:ktor-server-core:$ktor_version"
    testImplementation "io.ktor:ktor-server-sessions:$ktor_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "com.natpryce:hamkrest:$hamkrest_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.slf4j:slf4j-simple:$slf4j_simple_version"
    testImplementation "com.palantir.docker.compose:docker-compose-rule-junit4:$docker_compose_rule_junit"
}

task(type: Jar, 'javadocJar') {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task(type: Jar, 'sourcesJar') {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId project.group
            artifactId project.name
            version "$project.version"
        }
    }
}

// BINTRAY

apply plugin: 'com.jfrog.bintray'

def hasCredentials = rootProject.hasProperty('BINTRAY_USER') && rootProject.hasProperty('BINTRAY_KEY')

def pomConfig = {
    licenses {
        license {
            name projectLicense
            url "https://opensource.org/licenses/$projectLicense"
            distribution "repo"
        }
    }
    developers {
        developer {
            id projectDevelNick
            name projectDevelName
            organization projectDevelNick
            organizationUrl projectDevelNickUrl
        }
    }

    scm {
        url ext.projectUrl
    }
}

project.ext.configureMavenCentralMetadata = {
    def root = it.asNode()
    // NOTE: Don't try to move top-level things (especially "description") to the pomConfig block
    //       because they would resolve incorrectly to top-level project properties in Gradle/Groovy
    root.appendNode('name', project.name)
    root.appendNode('description', project.name)
    root.appendNode('url', projectUrl)
    root.children().last() + pomConfig
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact javadocJar
            artifact sourcesJar
            pom.withXml(configureMavenCentralMetadata)
        }
    }
}

if (hasCredentials) {
    bintray {
        user = rootProject.property('BINTRAY_USER')
        key = rootProject.property('BINTRAY_KEY')
        publications = ['maven']
        publish = true
        override = true

        pkg {
            repo = "soywiz"
            name = project.name
            userOrg = 'soywiz'
            licenses = ['Apache-2.0']
            vcsUrl = gitUrl
        }
    }
}